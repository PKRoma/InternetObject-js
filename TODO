
- Validate Null and Undefined while doing common type check in typeDefs
- Tests pending for loading objects
- Invalid schema                             V color separator
  v1:datetime, v2:date, v3:time, v4*:datetime: v5?:datetime, v6?*:datetime
- Following object returns invalid JSON
  {
    name: "aamir", # This is a name
    "age": 40
  }

- Array serialization handles null, undefined and defaults
- Properly handles default if null or bools strings are found

- String issues
  - Dont convert number strings to number! (done)
  - String abruptly terminated errors not catched (done)
  - |aamir "    | returns 'aamir "    ' string (done)
  - 'aamir "    ' return 'aamir "' (string)
  - open strings do not replaces \r\n with \n (done)
  - throws and separator error for " aamir [aamir]" (done)
- {} returns in [{}] (done)
- "---" return [no-data] rather than quoted string (done)

- Tokenizer now roperly handles new-line when a sep is found next


- Invalid Data Type

  ~ $address: {street, city}
  ~ $schema: {name, age, address: $address}
  ---
  ~ Kabir, 17, {Kalpataru, Mira Road}
  ~ Aamir, 25, {Kalpataru, MIra Road}

- When header does not have schema

  test: {name, age, address: {street, city}}
  ---
  ~ Kabir, 17, {Kalpataru, Mira Road}
  ~ Aamir, 25, {Kalpataru, MIra Road}

- Fix error with following docs

  name: []
  ***
  ***

pending
=========
- Collections loading



Other improvements
==================
- Finalize error codes and message
- Replace hardcoded values with constants
- Allow some configurable behaviours


Behaviours
==========
- Should you normalize various newline formats to \n ?
- Do not convert datetime to native datetime objects


# Error Handling
- TODO: Standard error handling mechanism
- FIXME: When an error occurs at the EoF, the position is shown as `undefined` instead of the last position of the file.
- TODO: Add build, watch and minification script in the package.json
